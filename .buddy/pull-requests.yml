- pipeline: "Pull Request Tests"
  on: "EVENT"
  events:
  - type: "PUSH"
    refs:
    - "refs/pull/*"
  priority: "NORMAL"
  fetch_all_refs: true
  fail_on_prepare_env_warning: true
  trigger_conditions:
  - trigger_condition: "ALWAYS"
  actions:
  - action: "Gitignored files check"
    type: "BUILD"
    working_directory: "/buddy/accessibility-patterns"
    docker_image_name: "library/node"
    docker_image_tag: "16"
    execute_commands:
    - "if [[ ! -z $(git ls-files -i --exclude-standard) ]]; then exit 1; fi"
    volume_mappings:
    - "/:/buddy/accessibility-patterns"
    shell: "BASH"
    run_next_parallel: true
    trigger_conditions:
    - trigger_condition: "ALWAYS"
      zone_id: ""
      trigger_hours: []
      trigger_days: []
  - action: "Check for git conflicts"
    type: "BUILD"
    working_directory: "/buddy/accessibility-patterns"
    docker_image_name: "library/node"
    docker_image_tag: "16"
    execute_commands:
    - "! git grep -E \"<<<<<<< |>>>>>>> \" -- './*' ':!buddy.yml' ':!.buddy/*'"
    volume_mappings:
    - "/:/buddy/accessibility-patterns"
    shell: "BASH"
    trigger_conditions:
    - trigger_condition: "ALWAYS"
      zone_id: ""
      trigger_hours: []
      trigger_days: []
  - action: "npm audit"
    type: "BUILD"
    working_directory: "/buddy/accessibility-patterns"
    docker_image_name: "library/node"
    docker_image_tag: "16"
    execute_commands:
    - "if [[ -f package.json ]]; then npm audit --audit-level=high --production --cache /buddy/accessibility-patterns/.npm; fi"
    volume_mappings:
    - "/:/buddy/accessibility-patterns"
    ignore_errors: false
    shell: "BASH"
    trigger_condition: "ALWAYS"
    execute_every_command: true
  - action: "npm ci"
    type: "BUILD"
    working_directory: "/buddy/accessibility-patterns"
    docker_image_name: "library/node"
    docker_image_tag: "16"
    execute_commands:
    - "npm ci --cache /buddy/accessibility-patterns/.npm"
    volume_mappings:
    - "/:/buddy/accessibility-patterns"
    shell: "BASH"
    trigger_conditions:
    - trigger_condition: "ALWAYS"
      zone_id: ""
      trigger_hours: []
      trigger_days: []
  - action: "npm run lint"
    type: "BUILD"
    working_directory: "/buddy/accessibility-patterns"
    docker_image_name: "library/node"
    docker_image_tag: "16"
    execute_commands:
    - "npm run lint"
    volume_mappings:
    - "/:/buddy/accessibility-patterns"
    shell: "BASH"
    run_next_parallel: true
    trigger_conditions:
    - trigger_condition: "ALWAYS"
      zone_id: ""
      trigger_hours: []
      trigger_days: []
  - action: "npm run stylelint"
    type: "BUILD"
    working_directory: "/buddy/accessibility-patterns"
    docker_image_name: "library/node"
    docker_image_tag: "16"
    execute_commands:
    - "npm run stylelint"
    volume_mappings:
    - "/:/buddy/accessibility-patterns"
    shell: "BASH"
    trigger_conditions:
    - trigger_condition: "ALWAYS"
      zone_id: ""
      trigger_hours: []
      trigger_days: []
  - action: "npm run build"
    type: "BUILD"
    disabled: true
    working_directory: "/buddy/accessibility-patterns"
    docker_image_name: "library/node"
    docker_image_tag: "16"
    execute_commands:
    - "npm run build"
    volume_mappings:
    - "/:/buddy/accessibility-patterns"
    shell: "BASH"
    trigger_conditions:
    - trigger_condition: "ALWAYS"
